$ make main # adjust compiler in Makefile if necessary
/opt/gcc/gcc-4.5.2/bin/gcc -Wall -std=c99 -MMD -MP   -c -o main.o main.c
/opt/gcc/gcc-4.5.2/bin/gcc -Wall -std=c99 -MMD -MP   -c -o heat_3D.o heat_3D.c
/opt/gcc/gcc-4.5.2/bin/gcc -Wall -std=c99 -MMD -MP   -c -o nrutil.o nrutil.c
/opt/gcc/gcc-4.5.2/bin/gcc -Wall -std=c99 -MMD -MP   -c -o gauss_elim.o gauss_elim.c
/opt/gcc/gcc-4.5.2/bin/gcc -Wall -std=c99 -MMD -MP   -c -o utilities.o utilities.c
/opt/gcc/gcc-4.5.2/bin/gcc -lm -Wl,-rpath=/opt/gcc/gcc-4.5.2/lib  main.o heat_3D.o nrutil.o gauss_elim.o utilities.o   -o main
$ ./main -h
./main: invalid option -- h
Usage: ./main [-X length in x dimension (in meters) ]
              [-Y length in y dimension (in meters) ]
              [-Z length in z dimension (in meters) ]
              [-x number of divisions along x dimension ]
              [-y number of divisions along y dimension ]
              [-z number of divisions along z dimension ]
              [-n number of time steps to calculate ]
              [-s how many time steps between reports ]
              [-p how long to pause reports (in seconds) ]
              [-a diffusivity constant (in m/s^2) ]
              [-t length of time step (in seconds) ]
              [-r ratio of noise applied to initial condition (0=none) ]
              [-b value of constant boundary condition (or p for periodic) ]
              [-m method (FTCS BE CN BEj BEgs BEsor) ]
              [-o filename for plottable solution data ]
              [-O filename for plottable performance data ]
              [-q suppress normal output ]
Specify . as the filename to use a default value
$ ./main -x2 -y2 -z3 -n500 -s10 -p.1 -t.03 -r 0 -m FTCS -b 9 -q

The code is written in C99, using a variant of nrutil.{c,h} with double
precision third order tensors. The output is ANSI text, though -o can be
used to generate plottable data in an output file.

I am confident in my implementation of these features:
 l_x != l_y != l_z
 dx != dy != dz
 command line options for everything, including which method, physical setup, etc.
 default vaules for when command line options are left out
 FTCS, BE, and CN
 gaussian elimination
 guassian curve with noise
 periodic boundary conditions
 runtime performance plotting, using -O flag and plot.py script to generate hw{2,3}_plot.png
 Jacobi, Gauss-Seidel, and SOR, with simplifying assumptions about boundaries, etc.

These features were not attempted:
 ADI CN
 source term

todo:

separate files for direct and iterative matrix solvers?

ftcs could be separated from be and cn as explicit vs. implicit

use struct for other collections of parameters?

1 to m for populating A is strange. for loops with i, j, k would be much easier to read.
